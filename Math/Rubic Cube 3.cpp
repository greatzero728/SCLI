//          0  1  2
//          3  4  5
//          6  7  8
// 9 10 11 12 13 14 15 16 17 18 19 20
//21 22 23 24 25 26 27 28 29 30 31 32
//33 34 35 36 37 38 39 40 41 42 43 44
//    U    45 46 47
//   LFRB  48 49 50
//    D    51 52 53

int r_[9][27] = {
	{0,6,8,2, 1,3,7,5, 9,12,15,18, 10,13,16,19, 11,14,17,20},
	{9,33,35,11, 10,21,34,23, 6,20,51,36, 3,32,48,24, 0,44,45,12},
	{12,36,38,14, 13,24,37,26, 8,11,45,39, 7,23,46,27, 6,35,47,15},
	{15,39,41,17, 13,24,37,26, 8,11,45,39, 7,23,46,27, 6,35,47,15},
	{18,42,44,20, 19,30,43,32, 0,17,53,33, 1,29,52,21, 2,41,51,9},
	{45,51,53,47, 46,48,52,50, 35,44,41,38, 34,43,40,37, 33,42,39,36},
	{6,3,0,1, 2,5,8,7, 4,12,13,14, 26,38,37,36, 24,25,11,23, 35,34,33,21, 9,10,22}, //UFL
	{53,52,51,48, 45,46,47,50, 49,42,30,18, 19,20,32,44, 43,31,41,40, 39,27,15,16, 17,29,28}, //DBR
	{21,24,27,30, 22,25,28,31, 23,26,29,32}
}, rot[6][54], id[24][54] = {
	{39,27,15,40, 28,16,41,29, 17,47,50,53, 42,30,18,2, 5,8,14,26, 38,46,49,52, 43,31,19,1,
	4,7,13,25, 37,45,48,51, 44,32,20,0, 3,6,12,24, 36,33,21,9, 34,22,10,35, 23,11}
};

void rote(int *a, int *b, int *c) {
	int i = 0; while(b[c[i]] = a[c[i + 18]], ++i < 9);
	while(b[c[i]] = a[c[i - 9]], ++i < 27);
}
void change(int i, int j) {
	rote(id[i], id[j], r_[6]), rote(id[i], id[j], r_[7]);
}

void init() {
	int i = 6, j, k = 54; while(k--) id[3][k] = k;
	while(i--) {
		j = 54; while(j--) rot[i][j] = j;
		j = 19; while(j--) rot[i][r_[i][j]] = r_[i][j + 1];
		for(j = 3; j < 20; j += 4) rot[i][_r[i][j]] = r_[i][j - 3];
	}
	for(i++; i < 4; i += 3) change(i, i + 1), change(i + 1, i + 2);
	while(i--) for(j = i + 6; j < 24; j += 6) {
		k = 54; while(k--) id[j][rot[0][k]] = id[j - 6][rot[5][k]];
		k = 12; while(--k) id[j][r_[8][k]] = id[j - 6][r_[8][k - 1]];
		while(k < 12) id[j][r_[8][k]] = id[j - 6][r_[8][k + 3]], k += 4;
	}
}